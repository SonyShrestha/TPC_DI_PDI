<?xml version="1.0" encoding="UTF-8"?>
<job>
  <name>IncrementalLoad_2</name>
  <description/>
  <extended_description/>
  <job_version/>
  <job_status>0</job_status>
  <directory>/</directory>
  <created_user>-</created_user>
  <created_date>2023/11/19 17:34:37.966</created_date>
  <modified_user>-</modified_user>
  <modified_date>2023/11/19 17:34:37.966</modified_date>
  <parameters>
    </parameters>
  <connection>
    <name>oracle_con</name>
    <server>${oracle_host}</server>
    <type>ORACLE</type>
    <access>Native</access>
    <database>${oracle_database}</database>
    <port>1521</port>
    <username>${oracle_username}</username>
    <password>${oracle_password}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>1521</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>STRICT_NUMBER_38_INTERPRETATION</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    </slaveservers>
  <job-log-table>
    <connection/>
    <schema/>
    <table/>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>Start</name>
      <description/>
      <type>SPECIAL</type>
      <attributes/>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>384</xloc>
      <yloc>272</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Job</name>
      <description/>
      <type>JOB</type>
      <attributes/>
      <specification_method>filename</specification_method>
      <job_object_id/>
      <filename>${Internal.Entry.Current.Directory}/IncrementalLoad1.kjb</filename>
      <jobname/>
      <directory/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Nothing</loglevel>
      <slave_server_name/>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <expand_remote_job>N</expand_remote_job>
      <create_parent_folder>N</create_parent_folder>
      <pass_export>N</pass_export>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <set_append_logfile>N</set_append_logfile>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>688</xloc>
      <yloc>272</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Success</name>
      <description/>
      <type>SUCCESS</type>
      <attributes/>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1440</xloc>
      <yloc>272</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Visibility Batch3</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>
insert into DImessages
select
	 CURRENT_TIMESTAMP as MessageDateAndTime
	,case when BatchID is null then 0 else BatchID end as BatchID
	,MessageSource
	,MessageText 
	,'Visibility_1' as MessageType
	,MessageData
from (
	select max(BatchID) as BatchID from DImessages 
) x join (
	/* Basic row counts */
       select 'DimAccount' as MessageSource, 'Row count' as MessageText, 
			count(*) as MessageData from DimAccount
	union select 'DimBroker' as MessageSource, 'Row count' as MessageText, 
			count(*) as MessageData from DimBroker
	union select 'DimCompany' as MessageSource, 'Row count' as MessageText, 
			count(*) as MessageData from DimCompany
	union select 'DimCustomer' as MessageSource, 'Row count' as MessageText, 
			count(*) as MessageData from DimCustomer
	union select 'DimDate' as MessageSource, 'Row count' as MessageText, 
			count(*) as MessageData from DimDate
	union select 'DimSecurity' as MessageSource, 'Row count' as MessageText, 
			count(*) as MessageData from DimSecurity
	union select 'DimTime' as MessageSource, 'Row count' as MessageText, 
			count(*) as MessageData from DimTime
	union select 'DimTrade' as MessageSource, 'Row count' as MessageText, 
			count(*) as MessageData from DimTrade
	union select 'Financial' as MessageSource, 'Row count' as MessageText, 
			count(*) as MessageData from Financial
	union select 'Industry' as MessageSource, 'Row count' as MessageText, 
			count(*) as MessageData from Industry
	union select 'Prospect' as MessageSource, 'Row count' as MessageText,
			 count(*) as MessageData from Prospect
	union select 'StatusType' as MessageSource, 'Row count' as MessageText, 
			count(*) as MessageData from StatusType
	union select 'TaxRate' as MessageSource, 'Row count' as MessageText, 
			count(*) as MessageData from TaxRate
	union select 'TradeType' as MessageSource, 'Row count' as MessageText, 
			count(*) as MessageData from TradeType
	/* Row counts for Fact tables */
	union select 'FactCashBalances' as MessageSource, 'Row count' as MessageText, 
			count(*) as MessageData from FactCashBalances
	union select 'FactCashBalances' as MessageSource, 'Row count joined' as MessageText, 
			count(*) as MessageData 
			from FactCashBalances f
			inner join DimAccount a on f.SK_AccountID = a.SK_AccountID
			inner join DimCustomer c on f.SK_CustomerID = c.SK_CustomerID
			inner join DimBroker b on a.SK_BrokerID = b.SK_BrokerID
			inner join DimDate d on f.SK_DateID = d.SK_DateID
	union select 'FactHoldings' as MessageSource, 'Row count' as MessageText, 
			count(*) as MessageData from FactHoldings
	union select 'FactHoldings' as MessageSource, 'Row count joined' as MessageText, 
			count(*) as MessageData 
			from FactHoldings f
			inner join DimAccount a on f.SK_AccountID = a.SK_AccountID
			inner join DimCustomer c on f.SK_CustomerID = c.SK_CustomerID
			inner join DimBroker b on a.SK_BrokerID = b.SK_BrokerID
			inner join DimDate d on f.SK_DateID = d.SK_DateID
			inner join DimTime t on f.SK_TimeID = t.SK_TimeID
			inner join DimCompany m on f.SK_CompanyID = m.SK_CompanyID
			inner join DimSecurity s on f.SK_SecurityID = s.SK_SecurityID
	union select 'FactMarketHistory' as MessageSource, 'Row count' as MessageText, 
			count(*) as MessageData from FactMarketHistory
	union select 'FactMarketHistory' as MessageSource, 'Row count joined' as MessageText, 
			count(*) as MessageData 
			from FactMarketHistory f
			inner join DimDate d on f.SK_DateID = d.SK_DateID
			inner join DimCompany m on f.SK_CompanyID = m.SK_CompanyID
			inner join DimSecurity s on f.SK_SecurityID = s.SK_SecurityID
	union select 'FactWatches' as MessageSource, 'Row count' as MessageText, 
			count(*) as MessageData from FactWatches
	union select 'FactWatches' as MessageSource, 'Row count joined' as MessageText, 
			count(*) as MessageData 
			from FactWatches f
			inner join DimCustomer c on f.SK_CustomerID = c.SK_CustomerID
			inner join DimDate dp on f.SK_DateID_DatePlaced = dp.SK_DateID
			-- (cannot join on SK_DateID_DateRemoved because that field can be null)
			inner join DimSecurity s on f.SK_SecurityID = s.SK_SecurityID
) y on 1=1
;
</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>oracle_con</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>864</xloc>
      <yloc>272</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Set variables</name>
      <description/>
      <type>SET_VARIABLES</type>
      <attributes/>
      <replacevars>Y</replacevars>
      <filename>${Internal.Job.Filename.Directory}/../config/batch3.properties</filename>
      <file_variable_type>JVM</file_variable_type>
      <fields>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>544</xloc>
      <yloc>272</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Validation Batch3</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>insert into DImessages
select
     CURRENT_TIMESTAMP as MessageDateAndTime
     ,case when BatchID is null then 0 else BatchID end as BatchID
     ,MessageSource
     ,MessageText 
     ,'Validation' as MessageType
     ,MessageData
from (
     select max(BatchID) as BatchID from DImessages 
) x join (
    /* Basic row counts */
     select 'DimAccount' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimAccount
     union select 'DimBroker' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimBroker
     union select 'DimCompany' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimCompany
     union select 'DimCustomer' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimCustomer
     union select 'DimDate' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimDate
     union select 'DimSecurity' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimSecurity
     union select 'DimTime' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimTime
     union select 'DimTrade' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from DimTrade
     union select 'FactCashBalances' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from FactCashBalances
     union select 'FactHoldings' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from FactHoldings
     union select 'FactMarketHistory' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from FactMarketHistory
     union select 'FactWatches' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from FactWatches
     union select 'Financial' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from Financial
     union select 'Industry' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from Industry
     union select 'Prospect' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from Prospect
     union select 'StatusType' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from StatusType
     union select 'TaxRate' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from TaxRate
     union select 'TradeType' as MessageSource, 'Row count' as MessageText, count(*) as MessageData from TradeType
     /* Joined row counts for Fact tables */
     union select 'FactCashBalances' as MessageSource, 'Row count joined' as MessageText, 
			count(*) as MessageData 
			from FactCashBalances f
			inner join DimAccount a on f.SK_AccountID = a.SK_AccountID
			inner join DimCustomer c on f.SK_CustomerID = c.SK_CustomerID
			inner join DimBroker b on a.SK_BrokerID = b.SK_BrokerID
			inner join DimDate d on f.SK_DateID = d.SK_DateID
     union select 'FactHoldings' as MessageSource, 'Row count joined' as MessageText, 
			count(*) as MessageData 
			from FactHoldings f
			inner join DimAccount a on f.SK_AccountID = a.SK_AccountID
			inner join DimCustomer c on f.SK_CustomerID = c.SK_CustomerID
			inner join DimBroker b on a.SK_BrokerID = b.SK_BrokerID
			inner join DimDate d on f.SK_DateID = d.SK_DateID
			inner join DimTime t on f.SK_TimeID = t.SK_TimeID
			inner join DimCompany m on f.SK_CompanyID = m.SK_CompanyID
			inner join DimSecurity s on f.SK_SecurityID = s.SK_SecurityID
    union select 'FactMarketHistory' as MessageSource, 'Row count joined' as MessageText, 
			count(*) as MessageData 
			from FactMarketHistory f
			inner join DimDate d on f.SK_DateID = d.SK_DateID
			inner join DimCompany m on f.SK_CompanyID = m.SK_CompanyID
			inner join DimSecurity s on f.SK_SecurityID = s.SK_SecurityID
    union select 'FactWatches' as MessageSource, 'Row count joined' as MessageText, 
			count(*) as MessageData 
			from FactWatches f
			inner join DimCustomer c on f.SK_CustomerID = c.SK_CustomerID
			inner join DimDate dp on f.SK_DateID_DatePlaced = dp.SK_DateID
			-- (cannot join on SK_DateID_DateRemoved because that field can be null)
			inner join DimSecurity s on f.SK_SecurityID = s.SK_SecurityID
    /* Additional information used at Audit time */
    union select 'DimCustomer' as MessageSource, 'Inactive customers' as MessageText, count(*) from DimCustomer where IsCurrent = 1 and Status = 'Inactive'
    union select 'FactWatches' as MessageSource, 'Inactive watches' as MessageText, count(*) from FactWatches where SK_DATEID_DATEREMOVED is not null
) y on 1=1
; </sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>oracle_con</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1056</xloc>
      <yloc>272</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>PCR Batch3</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>insert into DImessages
select
     MessageDateAndTime
     ,case when BatchID is null then 0 else BatchID end as BatchID
     ,MessageSource
     ,MessageText 
     ,MessageType
     ,MessageData
from (
     select CURRENT_TIMESTAMP as MessageDateAndTime
            ,max(BatchID) as BatchID
            ,'Phase Complete Record' as MessageSource
            ,'Batch Complete' as MessageText
            ,'PCR' as MessageType
            ,NULL as MessageData
  from DImessages
) 
;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>oracle_con</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1280</xloc>
      <yloc>272</yloc>
      <attributes_kjc/>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>Start</from>
      <to>Set variables</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Set variables</from>
      <to>Job</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Job</from>
      <to>Visibility Batch3</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Visibility Batch3</from>
      <to>Validation Batch3</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Validation Batch3</from>
      <to>PCR Batch3</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>PCR Batch3</from>
      <to>Success</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
  </notepads>
  <attributes/>
</job>
